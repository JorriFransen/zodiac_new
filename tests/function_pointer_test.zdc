std :: import std;

#run main();

main :: func() -> s64
{
    std.println("Function pointer test\n");


    f1 := *func1;
    f2 : *func() = *func2;
    f3 := f1;

    f1();
    f2();
    f3();

    std.print("\n");

    call_void_func(f1);
    call_void_func(f2);

    std.print("\n");

    call_void_func(return_fn_ptr(f2));

    return 0;
}


void_func_p :: typedef *func() -> void;

func1 :: func() {
    std.println("func1");
}

func2 :: func() {
    std.println("func2");
}

call_void_func :: func(func_ptr : void_func_p)
{
    func_ptr();
}

return_fn_ptr :: func(func_ptr : void_func_p) -> void_func_p
{
    return func_ptr;
}
