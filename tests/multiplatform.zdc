
std :: import std;

// @static_assert(false);

main :: func() -> s64
{
    // @static_assert(false);
    print("Hello, World! from multiple platforms...\n");
    return 42;
}

#if (PLATFORM_WINDOWS)
{
    windows :: import windows;

    stdout : windows.HANDLE;

    print :: func(str: *u8)
    {
        written : windows.DWORD;
        len := @cast(windows.DWORD, std.strlen(str));
        windows.WriteFile(stdout, str, len, *written, null);

        return;
    }

    mainCRTStartup :: func ()
    {
        stdout = windows.GetStdHandle(windows.WINDOWS_STDOUT_HANDLE_NUM);

        exit_code := main();
        @exit(exit_code);
    }
}

#if (PLATFORM_LINUX)
{
    print :: func(str: *u8)
    {
        @syscall(1, 1, str, std.strlen(str));
        return;
    }

    #naked #noreturn _start :: func ()
    {
        posix_call_main_and_exit();
    }

    #noreturn posix_call_main_and_exit :: func ()
    {
        exit_code := main();
        @exit(exit_code);
    }
}
// #else
// {
//     @static_assert(false);
// }
 
