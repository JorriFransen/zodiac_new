
std :: import std;

Day :: enum 
{
    Monday,
    Tuesday,
    Wednesday,
    Thursday,
    Friday,
    Saturday,
    Sunday, 
}

Operator : u8 : enum
{
    Add :: 16;
    Sub;
    Mul,
    Div,

    Eq :: 1,
    NEq,
    Lt,
    LtEq,
    Gt,
    GtEq,

    Invalid :: 0,
}

main :: func() -> s64
{
    std.println("Enum test");

    day : Day = Day.Monday;
    print_day(day);

    std.print("\n");

    print_day(Day.Monday);
    print_day(Day.Tuesday);
    print_day(Day.Wednesday);
    print_day(Day.Thursday);
    print_day(Day.Friday);
    print_day(Day.Saturday);
    print_day(Day.Sunday);

    std.print_num(Operator.Add);
    std.print("\n");
    std.print_num(Operator.Sub);
    std.print("\n");
    std.print_num(Operator.Mul);
    std.print("\n");
    std.print_num(Operator.Div);
    std.print("\n");
    std.print_num(Operator.Eq);
    std.print("\n");
    std.print_num(Operator.NEq);
    std.print("\n");
    std.print_num(Operator.Lt);
    std.print("\n");
    std.print_num(Operator.LtEq);
    std.print("\n");
    std.print_num(Operator.Gt);
    std.print("\n");
    std.print_num(Operator.GtEq);
    std.print("\n");
    std.print_num(Operator.Invalid);
    std.print("\n");

    return 0;
}

print_day :: func(day: Day)
{

    std.print("Day.");
    if (day == Day.Monday)
    {
        std.print("Monday");
    }
    else if (day == Day.Tuesday)
    {
        std.print("Tuesday");
    }
    else if (day == Day.Wednesday)
    {
        std.print("Wednesday");
    }
    else if (day == Day.Thursday)
    {
        std.print("Thursday");
    }
    else if (day == Day.Friday)
    {
        std.print("Friday");
    }
    else if (day == Day.Saturday)
    {
        std.print("Saturday");
    }
    else if (day == Day.Sunday)
    {
        std.print("Sunday");
    }
    else std.print("INVALID");

    std.print("\n");
    return;
}

#naked #noreturn _start :: func ()
{
    posix_call_main_and_exit();
}

#noreturn posix_call_main_and_exit :: func ()
{
    exit_code := main();
    @exit(exit_code);
}

