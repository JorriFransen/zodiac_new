
std :: import std;

Day :: enum
{
    Monday,
    Tuesday,
    Wednesday,
    Thursday,
    Friday,
    Saturday,
    Sunday,
}

#run main();

main :: func() -> s64
{
    std.println("Switch test");

    n := 0;

    while (n <= 10)
    {
        print_n(n);
        n = n + 1;
    }

    std.println("\n");

    day := Day.Monday;
    while (day <= Day.Sunday)
    {
        print_day(day);
        std.print(" is in the ");
        switch (day)
        {
            case Day.Monday .. Day.Tuesday: std.print("beginning");
            case Day.Wednesday .. Day.Friday: std.print("middle");
            case Day.Saturday .. Day.Sunday: std.print("end");
        }
        std.print(" of the week\n");
        day = day + 1;
    }

    std.print("\n");

    day = Day.Monday;
    while (day <= Day.Sunday)
    {
        print_day(day);
        std.print(" is a ");
        switch (day)
        {
            case Day.Monday .. Day.Friday: std.print("week");
            case Day.Saturday .. Day.Sunday: std.print("weekend");
        }
        std.print(" day\n");
        day = day + 1;
    }

    std.print("\n");

    day = Day.Monday;
    while (day <= Day.Sunday)
    {
        switch (day) #allow_incomplete
        {
            case Day.Tuesday: std.print("Handling tuesday...\n");
            case Day.Saturday: std.print("Handling saturday...\n");
        }
        day = day + 1;
    }

    std.print("\n");

    return 0;
}

print_n :: func(n: s64)
{
    std.print("The value of n is ");

    switch (n)
    {
        case 0:
            std.print("0\n");
            std.print("We don't need braces :) !!!\n");
            // Break is inserted automatically here

        case 1, 2, 4:
            std.print("1, 2 or 4\n");
            break;

        case 3:
        {
            std.print("3\n");
            std.print("But we can use braces...\n");
        }

        default:
            std.print("Out of reach\n");
    }

    std.print("\n");
    return;
}

print_day :: func(day: Day)
{

    std.print("Day.");

    switch (day)
    {
        case Day.Monday: std.print("Monday");
        case Day.Tuesday: std.print("Tuesday");
        case Day.Wednesday: std.print("Wednesday");
        case Day.Thursday: std.print("Thursday");
        case Day.Friday: std.print("Friday");
        case Day.Saturday: std.print("Saturday");
        case Day.Sunday: std.print("Sunday");
        default: std.print("INVALID");
    }

    return;
}

