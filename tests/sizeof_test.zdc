
std :: import std;

structs :: import structs;
using structs;

_main :: func() { main(); }
#run _main();

main :: func() -> s64
{
    std.print("sizeof test\n");

    std.print("@sizeof(bool) = ");
    std.print_num(@sizeof(bool));
    std.print("\n");

    std.print("@sizeof(u8) = ");
    std.print_num(@sizeof(u8));
    std.print("\n");

    std.print("@sizeof(s8) = ");
    std.print_num(@sizeof(s8));
    std.print("\n");

    std.print("@sizeof(u16) = ");
    std.print_num(@sizeof(u16));
    std.print("\n");

    std.print("@sizeof(s16) = ");
    std.print_num(@sizeof(s16));
    std.print("\n");

    std.print("@sizeof(u32) = ");
    std.print_num(@sizeof(u32));
    std.print("\n");

    std.print("@sizeof(s32) = ");
    std.print_num(@sizeof(s32));
    std.print("\n");

    std.print("@sizeof(u64) = ");
    std.print_num(@sizeof(u64));
    std.print("\n");

    std.print("@sizeof(s64) = ");
    std.print_num(@sizeof(s64));
    std.print("\n");

    std.print("@sizeof(float) = ");
    std.print_num(@sizeof(float));
    std.print("\n");

    std.print("@sizeof(double) = ");
    std.print_num(@sizeof(double));
    std.print("\n\n");

    std.print("@sizeof(Vec2) = ");
    std.print_num(@sizeof(Vec2));
    std.print("\n");

    std.print("@sizeof(Vec2d) = ");
    std.print_num(@sizeof(Vec2d));
    std.print("\n");

    std.print("@sizeof(Vec3) = ");
    std.print_num(@sizeof(Vec3));
    std.print("\n");

    std.print("@sizeof(Vec3d) = ");
    std.print_num(@sizeof(Vec3d));
    std.print("\n");

    std.print("@sizeof(Aabb) = ");
    std.print_num(@sizeof(Aabb));
    std.print("\n");

    std.print("@sizeof(Aabb_alt) = ");
    std.print_num(@sizeof(Aabb_alt));
    std.print("\n\n");

    std.print("@sizeof(*void) = ");
    std.print_num(@sizeof(*void));
    std.print("\n");

    std.print("@sizeof(*u8) = ");
    std.print_num(@sizeof(*u8));
    std.print("\n");

    std.print("@sizeof(Entity) = ");
    std.print_num(@sizeof(Entity));
    std.print("\n");


    std.print("\n");
    return 0;
}

