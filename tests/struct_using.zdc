
std :: import std;

#run main();

Vec2 :: struct
{
    x : s64;
    y : s64;
}

Entity :: struct
{
    name : *u8;

    position : Vec2;
    using position;
}

Player :: struct
{
    using entity : Entity;

    health : u64;
}

main :: func () -> s64
{
    std.print("struct using test\n");

    e : Entity;
    print_entity(*e);
    std.print("\n");

    e = create_entity("dummy", 1, 2);
    print_entity(*e);
    std.print("\n");

    std.print("\n");

    p : Player;
    print_entity(*p.entity);
    std.print("\n");
    print_player(*p);

    p = create_player("Joe", 11, 22);
    print_entity(*p.entity);
    std.print("\n");
    print_player(*p);

    std.print("\n");

    p.entity = create_entity("Joey", 12, 23);
    print_entity(*p.entity);
    std.print("\n");
    print_player(*p);


    return 0;
}

create_entity :: func (name: *u8, x: s64, y: s64) -> Entity
{
    result : Entity;

    result.name = name;

    result.x = x;
    result.y = y;

    return result;
}

create_player :: func (name: *u8, x: s64, y: s64) -> Player
{
    result : Player;
    result.entity = create_entity(name, x, y);
    result.health = 100;
    return result;
}

print_entity :: func (e: *Entity)
{
    std.print("Entity: ");
    if (e.name) {
        std.print("'");
        std.print(e.name);
        std.print("'");
    }
    std.print(" (x: ");
    std.print_num(e.position.x);
    std.print(", y: ");
    std.print_num(e.position.y);
    std.print(")");
}

print_player :: func (p : *Player)
{
    std.print("Player: ");
    if (p.name) {
        std.print("'");
        std.print(p.entity.name);
        std.print("'");
    }
    std.print(" (health: ");
    std.print_num(@cast(s64, p.health));
    std.print(", ");
    print_entity(*p.entity);
    std.print(")\n");
}
