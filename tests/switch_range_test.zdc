
std :: import std;

#run main();

main :: func() -> s64
{
    std.print("switch range test\n\n");

    // print_digit(Digit.ZERO);
    // print_digit(Digit.ONE);
    // print_digit(Digit.TWO);
    // print_digit(Digit.THREE);
    // print_digit(Digit.FOUR);
    // print_digit(Digit.FIVE);
    // print_digit(Digit.SIX);
    // print_digit(Digit.SEVEN);
    // print_digit(Digit.EIGHT);
    // print_digit(Digit.NINE);

    d := Digit.ZERO;
    while (d <= Digit.NINE) {
        print_digit(d);
        std.print("\n");
        d += 1;
    }

    std.print("\n");

    d = Digit.ZERO;
    while (d <= Digit.NINE) {
        print_digit_range(d);
        d += 1;
    }

    return 0;
}

Digit :: enum
{
    ZERO  :: 0,
    ONE   :: 1,
    TWO   :: 2,
    THREE :: 3,
    FOUR,
    SIX   :: 6,
    SEVEN,
    EIGHT,
    NINE,
}

print_digit :: func(d : Digit)
{
    std.print("Digit.");

    switch (d) {
        case Digit.ZERO: {
            std.print("ZERO");
        }
        case Digit.ONE: {
            std.print("ONE");
        }
        case Digit.TWO: {
            std.print("TWO");
        }
        case Digit.THREE: {
            std.print("THREE");
        }
        case Digit.FOUR: {
            std.print("FOUR");
        }
        // case Digit.FIVE: {
        //     std.print("FIVE");
        // }
        case Digit.SIX: {
            std.print("SIX");
        }
        case Digit.SEVEN: {
            std.print("SEVEN");
        }
        case Digit.EIGHT: {
            std.print("EIGHT");
        }
        case Digit.NINE: {
            std.print("NINE");
        }
        default: {
            std.print("UNKNOWN");
        }
    }

    return;
}

print_digit_range :: func(d : Digit)
{
    print_digit(d);
    std.print(" is in the ");

    switch (d) {
        case Digit.ZERO .. Digit.THREE: {
            std.print("LOW");
        }
        case Digit.FOUR .. Digit.SIX: {
            std.print("MID");
        }
        case Digit.SEVEN .. Digit.NINE: {
            std.print("HIGH");
        }
        default: std.print("UNKNOWN");
    }

    std.print(" range\n");
    return;
}
